{"version":3,"sources":["logo.svg","colors.js","config/index.js","WebSocket.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Colors","WebSocketService","callbacks","this","socketRef","instance","game_id","path","config","WebSocket","onmessage","e","console","log","socketNewMessage","data","onopen","onerror","message","onclose","connect","parsedData","JSON","parse","command","Object","keys","length","budget","grid_size","user_id","sendMessage","board","i","j","direction","pipe_size","initial_pressure","gameCallback","chatCallback","send","stringify","err","readyState","callback","socket","recursion","waitForSocketConnection","setTimeout","WebSocketInstance","getInstance","LoginComponent","props","gameIdChangeHandler","event","setState","target","value","budgetChangeHandler","sizeChangeHandler","userIdChangeHandler","state","className","onSubmit","handleLogin","type","onChange","placeholder","required","min","step","checked","href","React","Component","Block","style","background","color","height","dimenh","width","dimenw","fontSize","fontsize","onClick","pressure","Grid","handleContextMenu","grid","x","y","onContextMenu","dimen","m","row","push","renderBlock","n","renderRow","renderGrid","Direction","Blank","Controls","text","renderBlank","renderDirection","Reset","SelectPipe","handleChange","selectedOption","handleOptionChange","for","id","ChangeInitialPressure","bind","handleSubmit","handlePressureChange","ChatBar","messageChangeHandler","renderMessages","messages","user","map","arr","key","marginBottom","content","timestamp","substring","scrollToBottom","messagesEnd","scrollIntoView","behavior","block","newProps","sidebarClass","isOpen","messageList","float","clear","ref","el","toggleSidebar","sendMessageHandler","App","preventDefault","initUser","addCallbacks","gameUpdate","chatUpdate","setVisibility","visible","document","removeEventListener","handleSizeChange","handleDeletePipe","handleBlockClick","handleSwitch","handleViewSidebar","frach","toString","Array","fill","prow","size","col","loggedIn","menuX","menuY","currBlockX","currBlockY","cost","sidebarOpen","message_list","component","directionClick","blockClick","split","reset","switch","fracw","messages_js","entries","messages_final","len","pipe_click","clientX","clientY","addEventListener","deletePipe","changeSize","val","Number","isInteger","changePressure","alert","newChatMessage","div_width","handleDirectionClick","handleReset","position","top","left","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ae3d0de7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","let Colors = []\nColors[\"blank\"] = \"gray\"\nColors[\"active\"] = \"blue\"\nColors[\"pipe_U_large\"] = \"linear-gradient(to right, gray 5%,red 5%,red 95%, gray 95%)\"\nColors[\"pipe_D_large\"] = \"linear-gradient(to right, gray 5%,red 5%, red 95%, gray 95%)\"\nColors[\"pipe_L_large\"] = \"linear-gradient(to bottom, gray 5%,red 5%, red 95%, gray 95%)\"\nColors[\"pipe_R_large\"] = \"linear-gradient(to bottom, gray 5%,red 5%, red 95%, gray 95%)\"\nColors[\"pipe_U_medium\"] = \"linear-gradient(to right, gray 20%,red 20%, red 80%, gray 80%)\"\nColors[\"pipe_D_medium\"] = \"linear-gradient(to right, gray 20%,red 20%, red 80%, gray 80%)\"\nColors[\"pipe_L_medium\"] = \"linear-gradient(to bottom, gray 20%,red 20%, red 80%, gray 80%)\"\nColors[\"pipe_R_medium\"] = \"linear-gradient(to bottom, gray 20%,red 20%, red 80%, gray 80%)\"\nColors[\"pipe_U_small\"] = \"linear-gradient(to right, gray 33%,red 33%, red 67%, gray 67%)\"\nColors[\"pipe_D_small\"] = \"linear-gradient(to right, gray 33%,red 33%, red 67%, gray 67%)\"\nColors[\"pipe_L_small\"] = \"linear-gradient(to bottom, gray 33%,red 33%, red 67%, gray 67%)\"\nColors[\"pipe_R_small\"] = \"linear-gradient(to bottom, gray 33%,red 33%, red 67%, gray 67%)\"\nColors[\"split\"] = \"black\"\nColors[\"wall\"] = \"#51121B\"\nColors[\"tap\"] = \"green\"\nColors[\"tap_active\"] = \"yellow\"\nexport default Colors;\n\n//\"linear-gradient(to right, white 20%,red 21%, white 81%)\"","\nconst API_PATH = 'wss://secure-garden-92806.herokuapp.com/ws/sim'\n\nexport default {\n    API_PATH\n};","import config from './config';\n\nclass WebSocketService{\n\tstatic instance = null;\n\tcallbacks = {};\n\n\tstatic getInstance(){\n        if (!WebSocketService.instance){\n            WebSocketService.instance = new WebSocketService();\n        }\n        return WebSocketService.instance;\n    }\n\n    constructor(){\n        this.socketRef = null;\n    }\n\n    connect(game_id){\n        const path = config.API_PATH + '/' + game_id;\n\n        this.socketRef = new WebSocket(path);\n        \n        this.socketRef.onmessage = e => {\n        \tconsole.log('Received')\n            this.socketNewMessage(e.data);\n          };\n\n        this.socketRef.onopen = () => {\n            console.log(\"WebSocket open\");\n        };\n        \n        this.socketRef.onerror = e => {\n            console.log(e.message);\n        };\n\n        this.socketRef.onclose = () => {\n            console.log(\"WebSocket closed, restarting..\");\n            this.connect();\n        };   \n    }\n\n    socketNewMessage(data){\n        const parsedData = JSON.parse(data);\n        const command = parsedData.command;\n        console.log('hey')\n        if(Object.keys(this.callbacks).length === 0){\n            return;\n        }\n        if(command === 'game'){\n        \tconsole.log('game received')\n            this.callbacks[command](parsedData);\n        }\n        else if(command === 'chat'){\n            console.log(\"okay so this was called\")\n            this.callbacks[command](parsedData);\n        }\n    }\n\n    initUser(game_id,budget,grid_size,user_id){\n        console.log(user_id)\n    \tthis.sendMessage({command : 'init', game_id : game_id, budget: budget, grid_size: grid_size, user_id: user_id})\n    }\n\n    reset(game_id,board){\n    \tthis.sendMessage({command: 'reset', game_id: game_id, board: board})\n    }\n\n    blockClick(game_id,i,j,board){\n    \tthis.sendMessage({command: 'block_click', game_id: game_id, i:i, j:j,board: board})\n    }\n\n    directionClick(game_id,direction,pipe_size,board){\n    \tthis.sendMessage({command: 'direction_click', game_id: game_id, direction:direction, pipe_size: pipe_size, board: board })\n    }\n    changeSize(game_id,i,j,pipe_size,board){\n        this.sendMessage({command: 'change_size', game_id: game_id, i:i, j:j, pipe_size:pipe_size, board: board})\n    }\n    deletePipe(game_id,i,j,board){\n        this.sendMessage({command: 'delete_pipe', game_id: game_id, i:i, j:j, board: board})\n    }\n    changePressure(game_id,initial_pressure,board){\n        this.sendMessage({command: 'change_init_pressure', game_id: game_id, initial_pressure: initial_pressure, board:board})\n    }\n    pipe_click(game_id,i,j,board){\n        this.sendMessage({command: 'pipe_click', game_id: game_id, i:i,j:j, board: board})\n    }\n    switch(game_id,board){\n        this.sendMessage({command: 'switch', game_id: game_id, board: board})\n    } \n    newChatMessage(game_id,user_id,message){\n        this.sendMessage({command: 'new_message', game_id: game_id, user_id: user_id, message:message})\n    }\n    addCallbacks(gameCallback,chatCallback){\n        this.callbacks['game'] = gameCallback;\n        this.callbacks['chat'] = chatCallback;\n    }\n\n    sendMessage(data){\n        try{\n        \tconsole.log('tried');\n            console.log({...data})\n            console.log(data)\n            this.socketRef.send(JSON.stringify({...data}))\n        }\n        catch(err){\n            console.log(err.message);\n        }\n    }\n     state(){\n        return this.socketRef.readyState;\n    }\n\n\n    waitForSocketConnection(callback){\n        const socket = this.socketRef;\n        const recursion = this.waitForSocketConnection;\n        setTimeout(\n            function(){\n                if(socket.readyState === 1){\n                    console.log(\"Connection is made\");\n                    if(callback != null){\n                        callback();\n                    }\n                    return;\n                }\n                else{\n                    console.log(\"Wait for connection..\");\n                    recursion(callback);\n                }\n            }, 1);\n    }\n\n}\n\nlet WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Colors from './colors';\nimport WebSocketInstance from './WebSocket';\n\nclass LoginComponent extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      game_id : '',\n      user_id : '',\n      budget : '',\n      grid_size: 'mid',\n    }\n\n  }\n\n  gameIdChangeHandler = (event) => {\n    //console.log(window.location.origin.replace(/^http/,'ws')+'/ws/sim')\n    this.setState({\n      game_id: event.target.value\n    });\n  }\n\n  budgetChangeHandler = (event) => {\n    this.setState({\n      budget: event.target.value\n    });\n    //console.log(this.state.budget)\n  }\n\n  sizeChangeHandler = (event) => {\n    this.setState({\n      grid_size: event.target.value\n    });\n  }\n\n  userIdChangeHandler = (event) => {\n    this.setState({\n      user_id: event.target.value,\n    })\n  }\n\n\n  render() {\n    return(\n      <div className=\"login\">\n        <div className=\"login-title\">\n          <p>PlumbingSim</p>\n        </div>\n        <div className=\"login-form\">\n        <form onSubmit={(e) => this.props.handleLogin(e, this.state.game_id, this.state.budget, this.state.grid_size, this.state.user_id)}>\n          <div className=\"login-comp\">         \n          Simulation ID<br /><div className=\"login-inputbox\"><input \n            type=\"text\"\n            onChange = {this.gameIdChangeHandler}\n            value = {this.state.game_id}\n            placeholder = \"Simulation ID\"\n            required \n            className=\"login-input\"\n          /></div>\n          </div>\n          <div className=\"login-comp\">         \n          User ID<br /><div className=\"login-inputbox\"><input \n            type=\"text\"\n            onChange = {this.userIdChangeHandler}\n            value = {this.state.user_id}\n            placeholder = \"User ID\"\n            required \n            className=\"login-input\"\n          /></div>\n          </div>\n          <div className=\"login-comp\">\n          Budget <br /><div className=\"login-inputbox\"><input\n            type=\"number\"\n            onChange = {this.budgetChangeHandler}\n            value = {this.state.budget}\n            min = \"0\"\n            step = \"1\"\n            placeholder = \"Budget\"\n            required\n            className=\"login-input\"\n          /></div>\n          </div>\n          <div className=\"login-comp\">\n          Design boards:<br /> \n\n          <div className=\"size-options\">          \n          <input type=\"radio\" checked = {this.state.grid_size==\"mid\"} value = \"mid\" onChange = {this.sizeChangeHandler} />\n          Explore\n          </div>\n\n          <div className=\"size-options\">         \n          <input type=\"radio\" checked = {this.state.grid_size==\"sub_opt\"} value = \"sub_opt\" onChange = {this.sizeChangeHandler} />\n          Sub Optimal Model\n          </div>\n\n          </div>\n          <div className=\"login-submit\">\n          <button className=\"submit\" type=\"submit\" className=\"login-submit-button\">\n          Start\n          </button>\n          \n          </div>\n\n        </form>\n        </div>\n        <div className=\"log\">\n        <a href=\"/sim/log\">View Logs</a>\n        </div>\n      </div>\n    );\n  }\n\n\n}\n\n\nclass Block extends React.Component{\n  render(){\n\n  return (\n    <div className=\"square\" style={{background:this.props.color, height:this.props.dimenh, width:this.props.dimenw, fontSize: this.props.fontsize}} onClick={this.props.onClick}>\n    {this.props.pressure}\n    </div>\n  )\n  }\n}\n\nclass Grid extends React.Component{\n\n  renderBlock(i,j){\n  \t//console.log(this.props.grid[i][j])\n    let color = Colors[this.props.grid[i][j]]\n    let pressure = this.props.pressure[i][j];\n    return <Block\n      x={i}\n      y={j}\n      color={color}\n      onClick={(e) => this.props.onClick(e,i,j)}\n      onContextMenu={(e) => this.handleContextMenu(e,i,j)}\n      pressure = {pressure}\n      dimen = {this.props.dimen}\n      dimenh = {this.props.dimenh}\n      dimenw={this.props.dimenw}\n      fontsize = {this.props.fontsize}\n    />\n  }\n\n  handleContextMenu = (e,i,j) => {\n    this.props.handleContextMenu(e,i,j)\n  }\n\n  renderRow(i,m){\n    let row = []\n    for(let j = 0; j<m; j++){\n      row.push(this.renderBlock(i,j));\n    }\n    return row;\n  }\n\n  renderGrid(n,m){\n    let grid = []\n    for(let i=0; i<n; i++){\n      grid.push(this.renderRow(i,m));\n    }\n    return grid;\n  }\n\n  render(){\n    const n = this.props.height;\n    const m = this.props.width;\n    let width = \"50vw\"\n      if(n!=m){\n        width = \"75vw\"\n    }\n    return(\n      <div className=\"gridx\" style={{width:width}}>\n        {this.renderGrid(n,m)}\n      </div>\n    )\n  }\n}\n\nfunction Direction(props){\n  return(\n    <button className=\"direction\" onClick={props.onClick}>\n    </button>\n  )\n}\n\nfunction Blank(props){\n  return(\n    <button className=\"blank\">\n    </button>\n  )\n}\n\n\n\nclass Controls extends React.Component{\n\n  renderDirection(text){\n    return <Direction\n      text={text}\n      onClick={() => this.props.onClick(text)}\n    />;\n  }\n  renderBlank(){\n    return <Blank />;\n  }\n\n  render() {\n    return(\n      <div className=\"controls\">\n        <div className=\"controls-lhs\"><p>Pipe Direction</p></div>\n        <div className=\"controls-rhs\">\n        <div className=\"gridc\">\n          {this.renderBlank()}\n          {this.renderDirection(\"Up\")}\n          {this.renderBlank()}\n          {this.renderDirection(\"Left\")}\n          {this.renderBlank()}\n          {this.renderDirection(\"Right\")}\n          {this.renderBlank()}\n          {this.renderDirection(\"Down\")}\n          {this.renderBlank()}\n         </div>\n         </div>\n      </div>\n    )\n  }\n}\n\nfunction Reset(props){\n  return(\n    <div className=\"resetdiv\">\n    <div className=\"resetdiv-lhs\">\n    \tReset\n    </div>\n    <div className=\"resetdiv-rhs\">\n\t    <button className=\"submit1\" onClick={props.onClick}>Reset</button>\n    </div>\n    </div>\n  )\n}\n\nclass SelectPipe extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tselectedOption: 'large'\n\t\t}\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\tselectedOption: e.target.value\n\t\t})\n\t\tthis.props.handleOptionChange(e);\n\t\t\n\t}\n\n\trender() {\n\t\treturn(\n    <div className=\"size\">\n    \t<div className=\"size-lhs\">\n    \t\tPipe Size\n    \t</div>\n    \t<div className=\"size-rhs\">\n\t\t   \t\t\n    <div className=\"inputdiv\">\n\t\t<label for=\"small\"><input id=\"small\" type=\"radio\" value=\"small\" checked = {this.state.selectedOption==\"small\"} onChange = {this.handleChange} />0.5 inch</label>\n\t\t</div>\n    <div className=\"inputdiv\">\t  \n\t\t<label for = \"medium\"><input id=\"medium\" type=\"radio\" value=\"medium\" checked = {this.state.selectedOption==\"medium\"} onChange = {this.handleChange} />\n    0.75 inch</label>\n    </div>\n    <div className=\"inputdiv\">  \t\t\n\t\t<label for=\"large\"><input id=\"large\" type=\"radio\" value=\"large\" checked = {this.state.selectedOption==\"large\"} onChange = {this.handleChange} />\n      1 inch</label>\n    </div>\t\t\n    \n\t\t</div>\n    </div>\n\t\t)\n\t}\n}\n\nclass ChangeInitialPressure extends React.Component{\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      initial_pressure: ''\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState({\n      initial_pressure: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    let pressure = this.state.initial_pressure;\n    this.setState({\n      initial_pressure: ''\n    })\n    this.props.handlePressureChange(e,pressure)\n  }\n\n  render() {\n    return(\n    \t<div className=\"init-pressure\">\n\t      <div className=\"init-pressure-lhs\">\n\t      \tChange Initial Pressure\n\t      </div>\n\t      <div className=\"init-pressure-rhs\">\t\n\t      <form onSubmit={(e) => this.handleSubmit(e)}>\n\t        <div className=\"pdisplay\">\n          <input type=\"text\" onChange = {this.handleChange} className=\"pressure-input\" value={this.state.initial_pressure} />       \n\t        <button className=\"submit\" type=\"submit\">\n\t        Apply\n\t        </button>\n          </div>\n\t      </form>\n\t      </div>\n\t    </div>\n    )\n  }\n}\n\nclass ChatBar extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      message: \"\",\n    };\n  }\n\n  messageChangeHandler = event => {\n    this.setState({ message: event.target.value });\n  }\n\n  componentWillReceiveProps(newProps){\n    console.log('props')\n    this.scrollToBottom();\n  }\n\n  renderMessages = (messages,user) => {\n    /*let messages_js = Object.entries(messages)\n    let messages_final = []\n    let len = messages_js.length\n    for(var i=0; i<len;i++){\n      messages_final.push(messages_js[len-1-i][1])\n    }\n    console.log(messages_final)\n    console.log(this.props.user)\n    console.log(messages_final[0].user)*/\n    return messages.map((message, i, arr) => (\n      <li\n        key={message.id}\n        style={{ marginBottom: arr.length - 1 === i ? \"300px\" : \"15px\" }}\n        className={message.user === user ? \"sent\" : \"replies\"}\n      >\n        <p className=\"message-sender\">{message.user}</p>\n        <p>\n          {message.content}\n          <br />\n\n          <small>{message.timestamp.substring(0,16)}</small>\n        </p>\n      </li>\n    ));\n  };\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\", block:'end' });\n  };\n\n  componentDidUpdate() {\n    \n  }\n\n  render(){\n    var sidebarClass = this.props.isOpen ? 'sidebar open' : 'sidebar';\n    return (\n      <div className={sidebarClass}>   \n        <div className=\"messages\">\n          <ul id=\"chat-log\">\n            {true && this.renderMessages(this.props.messageList,this.props.user)}\n             <div\n              style={{ float: \"left\", clear: \"both\" }}\n              ref={el => {\n                this.messagesEnd = el;\n              }}\n            />\n          </ul>\n        </div>\n        <button onClick={this.props.toggleSidebar} className=\"sidebar-toggle\">Chat</button>\n        <div className=\"message-input\">\n          <form onSubmit={(event) => this.props.sendMessageHandler(event,this.state.message)}>\n              <div className=\"wrap\">\n                <input\n                  onChange={this.messageChangeHandler}\n                  value={this.state.message}\n                  required\n                  id=\"chat-message-input\"\n                  type=\"text\"\n                  placeholder=\"Write your message...\"\n                />\n                <button id=\"chat-message-submit\" className=\"submit\" type=\"submit\">\n                  Send\n                </button>\n              </div>\n            </form>\n          </div>\n      </div>\n    );\n  }\n\n}\nclass App extends React.Component{\n\n   constructor(props) {\n    super(props);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleSizeChange = this.handleSizeChange.bind(this);\n    this.handleDeletePipe = this.handleDeletePipe.bind(this);\n    this.handlePressureChange = this.handlePressureChange.bind(this);\n    this.handleBlockClick = this.handleBlockClick.bind(this);\n    this.setVisibility = this.setVisibility.bind(this);\n    this.handleSwitch = this.handleSwitch.bind(this);\n    this.handleViewSidebar = this.handleViewSidebar.bind(this);\n    this.sendMessageHandler = this.sendMessageHandler.bind(this);\n    let size = 22\n    let height = 22\n    let width = 22\n    let grid = []\n    let row = size-1\n    let col = 0\n    let pressure = []\n    let frac = 100/size\n    let dimen = frac.toString() + \"%\";\n    let fracw = 100/width\n    let frach = 100/height\n    let dimenw = fracw.toString() + \"%\";\n    let dimenh = frach.toString() + \"%\";\n    let board = 0;\n    let message_list = []\n   \n    for(let i=0;i<size;i++){\n      let row = Array(size).fill(\"blank\")\n      let prow = Array(size).fill(\"\")\n      pressure.push(prow)\n      grid.push(row)\n    }\n    pressure[row][col] = \"60\"\n    grid[row][col] = \"active\"\n    this.state = {\n      size:size,\n      grid: grid,\n      row: row,\n      col: col,\n      game_id: '',\n      user_id: '',\n      loggedIn: false,\n      pipe_size: 'large',\n      menuX: \"100px\",\n      menuY: \"100px\",\n      visible: false,\n      currBlockX: 0,\n      currBlockY: 0,\n      pressure: pressure,\n      initial_pressure: '60',\n      cost: 0,\n      budget: 0,\n      dimenw: dimenw,\n      dimenh: dimenh,\n      fontsize: 0,\n      height: height,\n      width: width,\n      board: 0,\n      sidebarOpen: false,\n      message_list: message_list,\n    };\n   \n  }\n  componentDidMount(){\n    var self = this\n    /*document.addEventListener('click', function(event){\n      self.setState({visible: false});\n    });*/\n  }\n    waitForSocketConnection(callback) {\n        const component = this;\n        setTimeout(\n            function(){\n                if(WebSocketInstance.state() === 1){\n                    console.log('Connection is made');\n                    callback()\n                    return;\n                }\n                else{\n                    console.log(\"Waiting for connection..\");\n                    component.waitForSocketConnection(callback);\n                }\n            }, 100);\n    }\n\n  handleDirectionClick(direction) {\n    let game_id = this.state.game_id\n    let pipe_size = this.state.pipe_size\n    let board = this.state.board\n    //console.log(this.state.grid[5][4]);\n    WebSocketInstance.directionClick(game_id,direction,pipe_size,board)\n  }\n\n  handleBlockClick(e,i,j){\n    let game_id = this.state.game_id\n    let board = this.state.board\n    const grid = this.state.grid;\n    if(grid[i][j]==\"split\" || grid[i][j]==\"tap\"){\n   \t\tWebSocketInstance.blockClick(game_id,i,j,board)\n   \t}\n   \telse if(grid[i][j].split(\"_\")[0]==\"pipe\"){\n   \t\tthis.handleContextMenu(e,i,j)\n   \t}\n  }\n\n  handleReset(){\n    console.log(\"reset\")\n    let board = this.state.board\n    WebSocketInstance.reset(this.state.game_id,board)\n  }\n\n  handleLogin = (e,game_id,budget,grid_size,user_id) => {\n    e.preventDefault();\n    this.setState({\n      //loggedIn: true,\n      game_id: game_id,\n      budget: budget,\n      user_id: user_id,\n    })\n    console.log(user_id)\n    WebSocketInstance.connect(game_id);\n    this.waitForSocketConnection(() => { \n      WebSocketInstance.initUser(game_id,budget,grid_size,user_id);\n      WebSocketInstance.addCallbacks(this.gameUpdate.bind(this),this.chatUpdate.bind(this))\n    });\n  }\n\n  handleOptionChange = (event) => {\n  \t//event.preventDefault();\n  \tconsole.log(event.target.value)\n  \tthis.setState({\n  \t\tpipe_size: event.target.value\n  \t})\n  }\n\n  handleSwitch(event){\n    let val = event.target.value\n    if(val == this.state.board){\n      return;\n    }\n    let board = 0\n    if(this.state.board == 0){\n      this.setState({\n        board:1,\n      })\n      board = 1\n    }\n    else{\n      this.setState({\n        board:0,\n      })\n      board = 0\n    }\n    let game_id = this.state.game_id\n    //let board = this.state.board\n    console.log(board)\n    console.log(\"switch\")\n    WebSocketInstance.switch(game_id,board)\n  }\n\n  gameUpdate(parsedData){\n    console.log('update')\n    const grid = parsedData['grid']\n    const row = parsedData['row']\n    const col = parsedData['col']\n    const size = parsedData['size']\n    const pressure = parsedData['pressure']\n    const initial_pressure = parsedData['initial_pressure']\n    const cost = parsedData['cost']\n    const budget = parsedData['budget']\n    const height = parsedData['height']\n    const width = parsedData['width']\n    let board = parsedData['board']\n    console.log(board)\n    if(board == -1){\n      board = this.state.board\n    }\n    console.log(board)\n    console.log(height,width)\n    let frac = 100/size;\n    let dimen = frac.toString() + \"%\"\n    let frach = 100/height\n    let fracw = 100/width\n    let dimenh = frach.toString() + \"%\"\n    let dimenw = fracw.toString() + \"%\"\n    let fontsz = 0\n    if(size==13){\n      fontsz = 3\n    }\n    else if(size==22){\n      fontsz = 2\n    }\n    else{\n      fontsz = 1.4\n    }\n    let fontsize = fontsz.toString() + \"vw\";\n    this.setState({\n    \tloggedIn: true,\n      grid: grid,\n      row: row,\n      col: col,\n      pressure: pressure,\n      initial_pressure: initial_pressure,\n      cost: cost,\n      budget: budget,\n      size: size,\n      height: height,\n      width: width,\n      dimen: dimen,\n      dimenh: dimenh,\n      dimenw: dimenw,\n      fontsize: fontsize,\n      board: board,\n    })\n    console.log(height,frach,dimenh)\n    console.log(width,fracw,dimenw)\n  }\n\n  chatUpdate(parsedData){\n    console.log('chat update')\n    let message_list = parsedData['message_list']\n    let messages_js = Object.entries(message_list)\n    let messages_final = []\n    let len = messages_js.length\n    for(var i=0; i<len;i++){\n      messages_final.push(messages_js[len-1-i][1])\n    }\n    this.setState({\n      message_list: messages_final,\n    });\n\n  }\n\n  handleContextMenu(e,i,j){\n    const grid = this.state.grid;\n    if(grid[i][j].split(\"_\")[0]==\"pipe\"){\n      const game_id = this.state.game_id\n      const board = this.state.board\n      WebSocketInstance.pipe_click(game_id,i,j,board)\n      e.preventDefault()\n      console.log(e.clientX,e.clientY)\n      console.log(i,j)\n      this.setState({\n        menuX: e.clientX,\n        menuY: e.clientY,\n        visible: true,\n        currBlockX: i,\n        currBlockY: j,\n      })\n      var self =this\n      document.addEventListener('click', this.setVisibility);\n    }\n  }\n\n  setVisibility = () =>{\n  \tthis.setState({visible:false})\n  \tdocument.removeEventListener('click', this.setVisibility);\n  }\n\n  handleDeletePipe(e) {\n    let game_id = this.state.game_id\n    let i = this.state.currBlockX\n    let j = this.state.currBlockY\n    let board = this.state.board\n    WebSocketInstance.deletePipe(game_id,i,j,board)\n  }\n\n  handleSizeChange(event) {\n    let size = event.target.value\n    let game_id = this.state.game_id\n    let i = this.state.currBlockX\n    let j = this.state.currBlockY\n    let board = this.state.board\n    WebSocketInstance.changeSize(game_id,i,j,size,board);\n  }\n\n  handlePressureChange(event,val){\n    event.preventDefault()\n    let game_id = this.state.game_id\n    let initial_pressure = +val\n    let board = this.state.board\n    if(Number.isInteger(initial_pressure)&&initial_pressure>0){\n      WebSocketInstance.changePressure(game_id,initial_pressure,board)\n    }\n    else{\n      alert('Enter a positive integer')\n    }\n  }\n\n  handleViewSidebar(){\n    this.setState({\n      sidebarOpen: !this.state.sidebarOpen,\n    })\n  }\n\n  sendMessageHandler(event,message){\n    event.preventDefault();\n    let user_id = this.state.user_id;\n    let game_id = this.state.game_id;\n    WebSocketInstance.newChatMessage(game_id,user_id,message);\n  }\n\n  render() {\n    const size = this.state.size\n    const height = this.state.height\n    const width = this.state.width\n    const grid = this.state.grid\n    const loggedIn = this.state.loggedIn\n    const pressure = this.state.pressure\n    const cost = this.state.cost\n    const budget = this.state.budget\n    const color = budget>=cost ? \"green\" : \"red\"\n    const dimen = this.state.dimen\n    const dimenh = this.state.dimenh\n    const dimenw = this.state.dimenw\n    const fontsize = this.state.fontsize\n    const message_list = this.state.message_list\n    const user_id = this.state.user_id\n    const board = this.state.board\n    let div_width = \"75vw\"\n \n    if(height!=width){\n      div_width = \"100vw\"\n    }\n    return(\n       loggedIn ?\n      <div className='container'>\n      <div className=\"switch\">\n        <button onClick={this.handleSwitch} value={0}>\n        Explore\n        </button>\n        <button onClick={this.handleSwitch} value={1}>\n        Sub Optimal Model\n        </button>\n      </div>\n      <ChatBar isOpen={this.state.sidebarOpen} toggleSidebar={this.handleViewSidebar} sendMessageHandler={this.sendMessageHandler} messageList={message_list} user={user_id}/>\n      <div className = 'rowC ' style={{width:div_width}}>\n      \n          <Grid \n            size={size}\n            height={height}\n            width={width}\n            grid={grid}\n            onClick = {(e,i,j) => this.handleBlockClick(e,i,j)}\n            handleContextMenu = {this.handleContextMenu}\n            pressure = {pressure}\n            dimen = {dimen}\n            dimenh={dimenh}\n            dimenw={dimenw}\n            fontsize = {fontsize}\n          />\n        \n        <div className='lhs'>       \n            <div className=\"budget\">\n              <div className=\"budget-lhs\">\n                Budget\n              </div>\n              <div className=\"budget-rhs\">  \n                {budget}\n              </div>\n            </div>\n            <Controls\n              onClick = {(direction) => this.handleDirectionClick(direction)}\n            />\n            <SelectPipe\n            \thandleOptionChange = {this.handleOptionChange}\n            \tselectedOption = {this.state.pipe_size}\n            />\n            <div className=\"money-spent\">\n              <div className=\"money-spent-lhs\">\n                Money Spent\n              </div>\n              <div className=\"money-spent-rhs\" style={{color:color}}>\n                {cost}\n              </div>\n            </div>\n            <div className=\"money-rem\">\n              <div className=\"money-rem-lhs\">\n                Money Remaining\n              </div>\n              <div className=\"money-rem-rhs\" style={{color:color}}>\n                {budget-cost}\n              </div>\n            </div>           \n            {board==0 &&\n            <ChangeInitialPressure \n              handlePressureChange = {this.handlePressureChange} />\n            }\n            {board==1 &&\n              <div className=\"emptydiv\" />\n            }\n            <Reset\n              onClick = {() => this.handleReset()}\n            />\n\n        </div>\n\n\n\n        {this.state.visible &&\n          <div style={{position:\"absolute\", top:this.state.menuY, left:this.state.menuX}} className=\"menu\">\n          \t<div>\n            <button onClick={this.handleDeletePipe} value=\"del\" className=\"menu-buttons\">\n            Delete pipe\n            </button>\n            </div>\n            <div>\n            <button onClick={this.handleSizeChange} value=\"large\" className=\"menu-buttons\">\n            Change to 1 inch\n            </button>\n            </div>\n            <div>\n            <button onClick={this.handleSizeChange} value=\"medium\" className=\"menu-buttons\">\n            Change to 0.75 inch\n            </button>\n            </div>\n            <div>\n            <button onClick={this.handleSizeChange} value=\"small\" className=\"menu-buttons\">\n            Change to 0.5 inch\n            </button>\n            </div>\n            </div>\n        }\n\n      </div>\n      <div className=\"links\">\n        Feeling Lost? Here's a <a href=\"https://phet.colorado.edu/sims/cheerpj/fluid-pressure-and-flow/latest/fluid-pressure-and-flow.html\" target=\"_blank\">simulation</a>.\n      </div>\n      </div>\n            :\n      <LoginComponent\n        handleLogin = {this.handleLogin} />\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}